@page "/Game"
@page "/Game/{Level:int}"
@inject IJSRuntime JsRuntime
@inject IGameImplementation GameImplementation

<div class="container">
    <div class="header">
        <h1 class="left">Elevator Saga <em class="emphasis-color">The (.NET) elevator programming game</em></h1>
    </div>

    <div class="challenge" style="height: 40px">
    </div>

    <div class="world">
        <div class="feedbackcontainer"></div>
        <div class="innerworld">
        </div>
        <div class="statscontainer">
            <div style="top: 20px"><span class="key">Transported</span><span class="value transportedcounter"></span></div>
            <div style="top: 40px"><span class="key">Elapsed time</span><span class="value elapsedtime"></span></div>
            <div style="top: 60px"><span class="key">Transported/s</span><span class="value transportedpersec"></span></div>
            <div style="top: 80px"><span class="key">Avg waiting time</span><span class="value avgwaittime"></span></div>
            <div style="top: 100px"><span class="key">Max waiting time</span><span class="value maxwaittime"></span></div>
            <div style="top: 120px"><span class="key" title="Number of floors that have been travelled by elevators">Moves</span><span class="value movecount"></span></div>
        </div>
    </div>

    <div class="codestatus"></div>
    <div class="code">
    </div>
    <div style="clear:both;"></div>

</div>


@code
{
    [Parameter]
    public int? Level { get; set; }

    private GameJavascriptTranslator _translator;
    private DotNetObjectReference<GameJavascriptTranslator> _jsReference;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _translator = new GameJavascriptTranslator(GameImplementation, JsRuntime);
            _jsReference = DotNetObjectReference.Create(_translator);
            await JsRuntime.InvokeVoidAsync("startGame", Level ?? 0, _jsReference);
        }
    }
}
